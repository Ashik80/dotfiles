;;; package -- Summary
;;; Code:
;;; Commentary:
;;; This part is autogenerated
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   '(evil-collection undo-fu rust-mode lsp-pyright doom-modeline ghub magit python-black js2-mode prettier-js python-mode typescript-mode evil cmake-mode)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;; MAIN CONFIG
;; ========================================

(load-file "~/.config/emacs/packages.el")

;; Disable menus
(menu-bar-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)
;; Disable startup screen
(setq inhibit-startup-screen t)
;; Convert tabs to spaces
(setq-default indent-tabs-mode nil)
;; Enable downcase
(put 'downcase-region 'disabled nil)
;; Font
(defvar my-font "FiraMono Nerd Font")
(defvar my-font-height 14)
(add-to-list 'default-frame-alist `(font . ,(format "%s-%d" my-font (/ my-font-height 10))))
(set-face-attribute 'default nil :font my-font :height 140)
(when (member "Noto Color Emoji" (font-family-list))
  (set-fontset-font
    t 'symbol (font-spec :family "Noto Color Emoji") nil 'prepend))
;; Enable line numbers globally
(global-display-line-numbers-mode)
;; Disable backup file
(setq make-backup-files nil)
;; Set theme
(load-file "~/.config/emacs/everforest-hard-dark-theme.el")
(load-theme 'everforest-hard-dark t)
;; Set modeline
(require 'doom-modeline)
(doom-modeline-mode 1)

;; Enable emojify
(require 'emojify)
(add-hook 'after-init-hook #'global-emojify-mode)
;; Enable projectile
(require 'projectile)
(projectile-mode 1)
;; Enable recentf
(require 'recentf)
(recentf-mode 1)
;; Enable company
(require 'company)
(global-company-mode 1)
;; Enable ivy for autocomplete
(require 'ivy)
(ivy-mode 1)
;; Enable flycheck
(require 'flycheck)
(global-flycheck-mode 1)
;; Enable evil mode
(require 'evil)
(evil-mode 1)
;; Enable undo for evil
(require 'undo-fu)
(setq evil-undo-system 'undo-fu)

(define-prefix-command 'leader)
(global-set-key (kbd "C-l") nil)
(global-set-key (kbd "C-l") 'leader)

;; enable scroll up on evil mode
(define-key evil-normal-state-map (kbd "C-u") 'evil-scroll-up)

(load-file "~/.config/emacs/grep-project.el")

;; Projectile keybinds
(define-key 'leader (kbd "p p") 'projectile-switch-project)
(define-key evil-normal-state-map (kbd "SPC p p") 'projectile-switch-project)

(define-key 'leader (kbd "f f") 'projectile-find-file)
(define-key evil-normal-state-map (kbd "SPC f f") 'projectile-find-file)

;; Open terminal in current project
(defun my-open-terminal()
  "Opens terminal at the current project root."
  (interactive)
  (let ((project-root (projectile-project-root)))
    (if project-root
        (let ((default-directory project-root))
          (vterm (getenv "SHELL"))))))
(define-key 'leader (kbd "M-t") 'my-open-terminal)
(define-key evil-normal-state-map (kbd "M-t") 'my-open-terminal)

;; Recentf keybinds
(define-key 'leader (kbd "f r") 'recentf-open-files)
(define-key evil-normal-state-map (kbd "SPC f r") 'recentf-open-files)

;; Git blame
(define-key 'leader (kbd "g b") 'magit-blame)
(define-key evil-normal-state-map (kbd "SPC g b") 'magit-blame)

(load-file "~/.config/emacs/lsp-setup.el")

;; Set the path to the Node.js binary
(let ((node-path "/home/ashik/.nvm/versions/node/v20.12.1/bin"))
  (setq exec-path (append exec-path (list node-path)))
  (setenv "PATH" (concat node-path ":" (getenv "PATH"))))

(load-file "~/.config/emacs/typescript-setup.el")

(load-file "~/.config/emacs/javascript-setup.el")

;; Use ESLint with Flycheck
(flycheck-add-mode 'javascript-eslint 'js2-mode)
(flycheck-add-mode 'javascript-eslint 'js-jsx-mode)
(flycheck-add-mode 'javascript-eslint 'typescript-mode)

(load-file "~/.config/emacs/python-setup.el")

(load-file "~/.config/emacs/rust-setup.el")

;;; init.el ends here
