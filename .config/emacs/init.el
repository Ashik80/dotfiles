;;; package -- Summary
;;; Code:
;;; Commentary:
;;; This part is autogenerated
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages '(lsp-pyright python-mode typescript-mode evil cmake-mode)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;; MAIN CONFIG
;; ========================================

(load-file "~/.config/emacs/packages.el")

;; Disable menus
(menu-bar-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)
;; Font
(set-face-attribute 'default nil :font "FiraMono Nerd Font" :height 140)
(when (member "Noto Color Emoji" (font-family-list))
  (set-fontset-font
    t 'symbol (font-spec :family "Noto Color Emoji") nil 'prepend))
;; Enable line numbers globally
(global-display-line-numbers-mode)
;; Set theme
(load-theme 'wombat t)
;; Disable backup file
(setq make-backup-files nil)

;; Enable emojify
(require 'emojify)
(add-hook 'after-init-hook #'global-emojify-mode)
;; Enable Evil - VI mode
(require 'evil)
(evil-mode 1)
;; Enable projectile
(require 'projectile)
(projectile-mode 1)
;; Enable recentf
(require 'recentf)
(recentf-mode 1)
;; Enable company
(require 'company)
(company-mode 1)
;; Enable ivy for autocomplete
(require 'ivy)
(ivy-mode 1)
;; Enable flycheck
(require 'flycheck)
(global-flycheck-mode 1)

;; Define a prefix command for the space key in normal mode
(define-prefix-command 'my-evil-space-prefix)
(evil-define-key 'normal 'global (kbd "SPC") 'my-evil-space-prefix)
;; disable evil key
(define-key evil-motion-state-map (kbd "K") nil)

;; Projectile keybinds
(evil-define-key 'normal 'global (kbd "SPC p p") 'projectile-switch-project)
(evil-define-key 'normal 'global (kbd "SPC f f") 'projectile-find-file)

;; Recentf keybinds
(evil-define-key 'normal 'global (kbd "SPC f r") 'recentf-open-files)

(load-file "~/.config/emacs/lsp-setup.el")

;; Set the path to the Node.js binary
(let ((node-path "/home/ashik/.nvm/versions/node/v20.12.1/bin"))
  (setq exec-path (append exec-path (list node-path)))
  (setenv "PATH" (concat node-path ":" (getenv "PATH"))))

(load-file "~/.config/emacs/typescript-setup.el")

(load-file "~/.config/emacs/python-setup.el")

;;; init.el ends here

